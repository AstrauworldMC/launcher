plugins {
    id 'java'
    id 'application'
//    id 'maven'
//    id 'maven-publish'
//    id 'org.openjfx.javafxplugin' version '0.0.13'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        url 'https://litarvan.github.io/maven'
    }
    maven {
        url 'https://jitpack.io'
    }
}

def openjfxGroup = 'org.openjfx'
def openjfxVersion = '19'
def osName = System.properties['os.name'].toLowerCase()
def openjfxPlatform = osName.contains('mac') ? 'mac' : osName.contains('win') ? 'win' : osName.contains('linux') ? 'linux' : null

dependencies {
    implementation 'fr.flowarg:flowupdater:1.7.2'
    implementation 'com.google.code.gson:gson:2.10'
    implementation 'fr.flowarg:flowmultitools:1.4.0'
    implementation 'fr.flowarg:openlauncherlib:3.2.5'
    implementation 'org.json:json:20220924'
    implementation 'org.apache.commons:commons-compress:1.21'
    implementation 'fr.litarvan:openauth:1.1.4'
    implementation 'com.github.Litarvan:Swinger:master-SNAPSHOT'
    implementation 'com.github.dcsch:typecast:master'
/*    api(group: openjfxGroup, name: 'javafx-base', version: openjfxVersion, classifier: openjfxPlatform)
    api(group: openjfxGroup, name: 'javafx-graphics', version: openjfxVersion, classifier: openjfxPlatform)
    api(group: openjfxGroup, name: 'javafx-controls', version: openjfxVersion, classifier: openjfxPlatform)
    api(group: openjfxGroup, name: 'javafx-fxml', version: openjfxVersion, classifier: openjfxPlatform)
    api(group: openjfxGroup, name: 'javafx-swing', version: openjfxVersion, classifier: openjfxPlatform)
    api(group: openjfxGroup, name: 'javafx-media', version: openjfxVersion, classifier: openjfxPlatform)*/
}

jar {
    manifest {
        attributes(
                'Main-Class': 'fr.timeto.astrauworld.launcher.LauncherFrame'
        )
    }
}

/*javafx {
    version = '19'
    modules = [ 'javafx.controls', 'javafx.fxml', 'javafx.swing', 'javafx.media', 'javafx.graphics' ]
//    sdk = System.getenv('JAVAFX_HOME')
    sdk = 'C:/Program Files/Java/javafx-jdk-19'
    println(sdk)
    if (sdk == null || sdk.isBlank()) {
        throw new InvalidUserDataException("JAVAFX_HOME environment variable is not set. It mist be set to root folder where JAVAFX SDK is located")
    }
    application {
        def javafxHome = System.getenv('JAVAFX_HOME')
        mainClassName = 'com.foo.FooApp'
        applicationName = 'foo-app'
        applicationDefaultJvmArgs = [
                "--module-path=${javafxHome}" + File.separator + 'lib', '--add-modules=javafx.controls,javafx.swing,javafx.media,javafx.graphics']
        println("applicationDefaultJvmArgs:" + applicationDefaultJvmArgs)
    }
}*/
